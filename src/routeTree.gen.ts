/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createServerRootRoute } from '@tanstack/react-start/server'

import { Route as rootRouteImport } from './routes/__root'
import { Route as PrivateRouteImport } from './routes/_private'
import { Route as IndexRouteImport } from './routes/index'
import { Route as PrivateBoardsRouteRouteImport } from './routes/_private/boards/route'
import { Route as PrivateBoardBoardIdRouteRouteImport } from './routes/_private/board/$boardId/route'
import { ServerRoute as ApiAuthSplatServerRouteImport } from './routes/api/auth/$'

const rootServerRouteImport = createServerRootRoute()

const PrivateRoute = PrivateRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const PrivateBoardsRouteRoute = PrivateBoardsRouteRouteImport.update({
  id: '/boards',
  path: '/boards',
  getParentRoute: () => PrivateRoute,
} as any)
const PrivateBoardBoardIdRouteRoute =
  PrivateBoardBoardIdRouteRouteImport.update({
    id: '/board/$boardId',
    path: '/board/$boardId',
    getParentRoute: () => PrivateRoute,
  } as any)
const ApiAuthSplatServerRoute = ApiAuthSplatServerRouteImport.update({
  id: '/api/auth/$',
  path: '/api/auth/$',
  getParentRoute: () => rootServerRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/boards': typeof PrivateBoardsRouteRoute
  '/board/$boardId': typeof PrivateBoardBoardIdRouteRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/boards': typeof PrivateBoardsRouteRoute
  '/board/$boardId': typeof PrivateBoardBoardIdRouteRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_private': typeof PrivateRouteWithChildren
  '/_private/boards': typeof PrivateBoardsRouteRoute
  '/_private/board/$boardId': typeof PrivateBoardBoardIdRouteRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/boards' | '/board/$boardId'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/boards' | '/board/$boardId'
  id:
    | '__root__'
    | '/'
    | '/_private'
    | '/_private/boards'
    | '/_private/board/$boardId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PrivateRoute: typeof PrivateRouteWithChildren
}
export interface FileServerRoutesByFullPath {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesByTo {
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRoutesById {
  __root__: typeof rootServerRouteImport
  '/api/auth/$': typeof ApiAuthSplatServerRoute
}
export interface FileServerRouteTypes {
  fileServerRoutesByFullPath: FileServerRoutesByFullPath
  fullPaths: '/api/auth/$'
  fileServerRoutesByTo: FileServerRoutesByTo
  to: '/api/auth/$'
  id: '__root__' | '/api/auth/$'
  fileServerRoutesById: FileServerRoutesById
}
export interface RootServerRouteChildren {
  ApiAuthSplatServerRoute: typeof ApiAuthSplatServerRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_private/boards': {
      id: '/_private/boards'
      path: '/boards'
      fullPath: '/boards'
      preLoaderRoute: typeof PrivateBoardsRouteRouteImport
      parentRoute: typeof PrivateRoute
    }
    '/_private/board/$boardId': {
      id: '/_private/board/$boardId'
      path: '/board/$boardId'
      fullPath: '/board/$boardId'
      preLoaderRoute: typeof PrivateBoardBoardIdRouteRouteImport
      parentRoute: typeof PrivateRoute
    }
  }
}
declare module '@tanstack/react-start/server' {
  interface ServerFileRoutesByPath {
    '/api/auth/$': {
      id: '/api/auth/$'
      path: '/api/auth/$'
      fullPath: '/api/auth/$'
      preLoaderRoute: typeof ApiAuthSplatServerRouteImport
      parentRoute: typeof rootServerRouteImport
    }
  }
}

interface PrivateRouteChildren {
  PrivateBoardsRouteRoute: typeof PrivateBoardsRouteRoute
  PrivateBoardBoardIdRouteRoute: typeof PrivateBoardBoardIdRouteRoute
}

const PrivateRouteChildren: PrivateRouteChildren = {
  PrivateBoardsRouteRoute: PrivateBoardsRouteRoute,
  PrivateBoardBoardIdRouteRoute: PrivateBoardBoardIdRouteRoute,
}

const PrivateRouteWithChildren =
  PrivateRoute._addFileChildren(PrivateRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PrivateRoute: PrivateRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
const rootServerRouteChildren: RootServerRouteChildren = {
  ApiAuthSplatServerRoute: ApiAuthSplatServerRoute,
}
export const serverRouteTree = rootServerRouteImport
  ._addFileChildren(rootServerRouteChildren)
  ._addFileTypes<FileServerRouteTypes>()
